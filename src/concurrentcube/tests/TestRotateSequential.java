package concurrentcube.tests;

import concurrentcube.Cube;
import org.junit.jupiter.api.Assertions;

public class TestRotateSequential {
    private static final int SIZE = 4;
    private static final int TIMES = 5;
    private final Cube testingCube = new Cube(4,
            (x, y) -> {
            },
            (x, y) -> {
            },
            () -> {
            },
            () -> {
            }
    );

    String[] EXPECTED = {
            "000000000000000022221111111111113333222222222222444433333333333311114444444444445555555555555555",
            "400040004000100011121112111211120333022202220222444433333333333311154445444544453555255525552555",
            "400040004000222211131115111511150000222322232223144403330333033311154445444544453334255525552555",
            "400040034003222311131115111511150004222522252225000133343334333421150445044504453334255425542551",
            "144440034003222301130115011541150004222522252225000133353335333200024441444155553334255425541111",
            "144440034003222301130115011555550004222522254115000133353335222500024441444133321223155315531444",
            "144440034003222301132225011555550004333522254115000144413335222500020115444133321223155315531444",
            "134444034103202301132225011555550404303520254215000144413335222500420155445133221023135312531144",
            "134444035121202301132235015555350404303520254215040141413035232500420155445133221023234012531144",
            "130444335121201301132235015555350424304520554245040141413035232502420255405134221033234012131104",
            "130404325121201303132335045554350424304520554245043141113025231502420255405134221033234012151104",
            "130404325121201303132335405154350424304504554245043141112055231502420255302534221033234012151104",
            "130404325121201303132335045554350424304520554245043141113025231502420255405134221033234012151104",
            "134404025121202303132335045554350404303520254215043141113025231500420155445133221023234012551144",
            "134444335121202301132235055555350404303520254215040141413005232500420155445133221023234012131144",
            "144440335021222301132235055555350004333522254115040141413005232500020115444133321223254015131444",
            "144440334103222301132225050555550004333522254115000144413505222500020115444133321223135315131444",
            "144440334103222301130115050555550004222522254115000133353505222500024441444133321223135315131444",
            "144440334103222301130115050541150004222522252225000133353505333200024441444155553334251423541111",
            "144540344104222001130115050541150004222322232223155203030353033310024441444145553334251523551115",
            "400040344104222011131115150551150004222322232223155103040354033521150445044514443334251523553332",
            "000020342104222035551101115111153004222322233223155103040354033521120444044414444334551553555332",
            "000020342104100035501102115211124333022202223223455133043354433521120444044414445115551553555332",
            "044003000010022121121102115211123550022202223223433333043354433545510444044414445115551553555332",
            "000020342104100035501102115211124333022202223223455133043354433521120444044414445115551553555332",
            "400040344104200011131115150522200333222222221223455133043354433521150445044514454115051503553332",
            "400040344104055311141111150122251220222322233223255103040354033521150445044514454334051503553332",
            "400040334103055311141111150122251224222522253222000233353505544131154445444504454331051003503332",
            "255140334103055301140111050142251224222522253222000233333503544304434441444155554331051003501112",
            "255140334103055301140111050155551224222522254225000233333503322204434441444154431004135315132001",
            "255140334103055301142225050155551224333322254225000244413503322204430111444154431004135315132001",
            "245144334103045301142225050155551524303321254525000244413503322204030151443154031204135312132201",
            "245144335021045301142235055155351524303321254525040241413003332204030151443154031204254012132201",
            "242144335021042301142235055155351504304321154505040241413003332205030251433155031244254012132241",
            "242104025021042303142335045154351504304321154505043241113023331205030251433155031244254012552241",
            "242104025021042303142335433154351504304304514505043241112115331205030251302355031244254012552241",
            "242104025021042303142335045154351504304321154505043241113023331205030251433155031244254012552241",
            "245104325021045303142335045154351524300321254525043241113023331204030551443154031204254012152201",
            "245144335021045301142235015155351524300321254525040241413033332204030551443154031204254012132201",
            "255140335121055301142235015155351224350322254225040241413033332204430501444154431004234015132001",
            "255140334103055301142225011155551224350322254225000244413333322204430501444154431004135315132001",
            "255140334103055301140501011155551224222522254225000235033333322204434441444154431004135315132001",
            "255140334103055301140501011142251224222522253222000235033333544304434441444155554331051003501112",
            "255540344104055001140501011142251221222322233223233300340534033524430441044115554334051503551112",
            "400040344104055011141501111122251221222322233223233200350535033531154445444520014334051503555443",
            "100020342104355041151012151211124221022302235223233200350535033531104444444420041334551553555443",
            "100020342104200041101015151511131333222222224005433230353535133531104444444420045222551553555443",
            "044003000010122231101015151511134110222222224005133330353535133543324444444420045222551553555443",
            "100020342104200041101015151511131333222222224005433230353535133531104444444420045222551553555443",
            "400040344104000011141501111135501333222222222005433230353535133531154445444520051222251523554443",
            "400040344104011411111502111235522221022302235223033200350535033531154445444520051334251523554443",
            "400140334103011311111502111235522224022502255223000035033333555241154445444500051332251423544443",
            "033240334103011311110502011245522224022502255223000335043334555404440441044155551332251423541113",
            "033240334103011311110502011255552224022502254552000335043334522304440441044155541221135315133442",
            "033240334103011311110225011255552224350402254552000304413334522304440502044155541221135315133442",
            "053244334003041311110225011255552324300401254152000304413334522304440552043155241221155312133542",
            "053244335121041311110255015255352324300401254152040300413034532304440552043155241221234012133542",
            "052244035121045311110255015255352324304401154142040300413034532301440252033153241251234012533542",
            "052204325121045313110055045254352324304401154142043300513024531301440252033153241251234012153542",
            "052204325121045313110055033154352324304404524142043300510115531301440252302453241251234012153542",
            "052204325121045313110055045254352324304401154142043300513024531301440252033153241251234012153542",
            "053204325121041313110055045254352324303401254152043300513024531304440152043155241221234012153542",
            "053244035121041311110255015255352324303401254152040300413034532304440152043155241221234012533542",
            "033240035121011311110255015255352224333402254552040300413034532304440112044155541221234015533442",
            "033240034003011311110225011255552224333402254552000304413334522304440112044155541221155315533442",
            "033240034003011311110112011255552224022502254552000333343334522304440441044155541221155315533442",
            "033240034003011311110112011245522224022502255223000333343334555404440441044155551332255425541113",
            "033540004000011011110112011245522222022302235223344403350335033534444441444125551334255525551113",
            "400140004000011011111112111235522222022302235223344003330333033541154445444534421334255525555554",
            "200100000000511012221115111511131222222322235223344003330333033541104444444434442334555555555554",
            "200100000000300012201111111111152333222222221225444033333333233541104444444434442553555555555554",
            "100000000000200341101111111111151220222222221225233333333333233544404444444434442553555555555554",
            "200100000000300012201111111111152333222222221225444033333333233541104444444434442553555555555554",
            "400140004000000011111112111251102333022202223225444033333333233541154445444534422553255525551554",
            "400140004000022111121115111551133002222322235223044003330333033541154445444534422334255525551554",
            "400240034003022311121115111551133004222522255224000033343334533011150445044514422333255425541554",
            "044040034003022321120115011541133004222522255224000433353335533110014441444125552333255425541115",
            "044040034003022321120115011525553004222522254113000433353335522410014441444153311222155315535443",
            "044040034003022321122225011525553004333522254113000444413335522410010115444153311222155315535443",
            "034044034103002321122225011525553404303520254213000444413335522410410155445153211022135312535143",
            "034044035121002321122235015525353404303520254213040441413035532410410155445153211022234012535143",
            "030044335121001321122235015525353424304520554243040441413035532412410255405154211032234012135103",
            "030004325121001323122335045524353424304520554243043441113025531412410255405154211032234012155103",
            "030004325121001323122335405124353424304504554243043441112055531412410255302554211032234012155103",
            "030004325121001323122335045524353424304520554243043441113025531412410255405154211032234012155103",
            "034004025121002323122335045524353404303520254213043441113025531410410155445153211022234012555143",
            "034044335121002321122235055525353404303520254213040441413005532410410155445153211022234012135143",
            "044040335021022321122235055525353004333522254113040441413005532410010115444153311222254015135443",
            "044040334103022321122225050525553004333522254113000444413505522410010115444153311222135315135443",
            "044040334103022321120115050525553004222522254113000433353505522410014441444153311222135315135443",
            "044040334103022321120115050541133004222522255224000433353505533110014441444125552333251423541115",
            "044240344104022121120115050541133000222322235223455103030353033550014441444135552334251523551114",
            "400240344104022111121115150541133000222322235223455003040354033211150445044554432334251523555331",
            "300220342104522125531101115111142000222322235223455003040354033211100444044454443334551553555331",
            "300220342104400025511102115211150333022202222225455033043354333211100444044454443114551553555331",
            "244003000010322411101102115211152551022202222225033333043354333245500444044454443114551553555331",
            "300220342104400025511102115211150333022202222225455033043354333211100444044454443114551553555331",
            "400240344104000011121115150552213333222222224225455033043354333211150445044554430114051503552331",
            "400240344104155211101111150152244223222322235223055003040354033211150445044554433334051503552331",
            "400340334103155311101111150152244224222522255221000033353505244021154445444524433335051003502331",
            "055040334103155331100111050142244224222522255221000133333503244224424441444135553335051003501115",
            "055040334103155331100111050135554224222522254224000133333503522124424441444124421003135315135005",
            "055040334103155331102225050135554224333322254224000144413503522124420111444124421003135315135005",
            "045044334103145331102225050135554524303321254524000144413503522124020151443124021203135312135205",
            "045044335021145331102235055135354524303321254524040141413003532124020151443124021203254012135205",
            "042044335021142331102235055135354504304321154504040141413003532125020251433125021243254012135245",
            "042004025021142333102335045134354504304321154504043141113023531125020251433125021243254012555245",
            "042004025021142333102335433134354504304304514504043141112115531125020251302325021243254012555245",
            "042004025021142333102335045134354504304321154504043141113023531125020251433125021243254012555245",
            "045004325021145333102335045134354524300321254524043141113023531124020551443124021203254012155205",
            "045044335021145331102235015135354524300321254524040141413033532124020551443124021203254012135205",
            "055040335121155331102235015135354224350322254224040141413033532124420501444124421003234015135005",
            "055040334103155331102225011135554224350322254224000144413333522124420501444124421003135315135005",
            "055040334103155331100501011135554224222522254224000135033333522124424441444124421003135315135005",
            "055040334103155331100501011142244224222522255221000135033333244224424441444135553335051003501115",
            "055340344104155231100501011142244220222322235223133200340534033254420441044155553334051503551111",
            "400340344104155211101501111112244220222322235223133000350535033321154445444550053334051503552442",
            "400320342104555201141012151211113220022302232223133000350535033321114444444450045334551553555442",
            "400320342104100001121015151511150333222222223002433030353535533321114444444450044221551553555442",
            "344003000010422121111015151511150112222222223002033330353535533343304444444450044221551553555442"
    };

    public void test() {
        System.out.println("Testing rotating and showing cube 4 x 4");

        int testNumber = 0;
        String[] afterRotation = new String[6 * SIZE * TIMES];

        for (int time = 0; time < TIMES; time++) {
            for (int layer = 0; layer < SIZE; layer++) {
                for (int side = 0; side < 6; side++) {
                    int finalSide = side;
                    int finalLayer = layer;
                    int finalTestNumber = testNumber++;

                    Assertions.assertDoesNotThrow(() -> testingCube.rotate(finalSide, finalLayer));
                    Assertions.assertDoesNotThrow(() -> {
                        afterRotation[finalTestNumber] = testingCube.show();
                    });
                }
            }
        }

        Assertions.assertArrayEquals(EXPECTED, afterRotation, "- BAD String");
        System.out.println("+ strings OK");
    }
}

